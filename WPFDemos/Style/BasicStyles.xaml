<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="DataGridAlternateRowColorBrush" Color="#F4F4F4" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#D2D1D2" />
    <SolidColorBrush x:Key="GridBorderBrush" Color="#E3E3E3" />
    <SolidColorBrush x:Key="GridSelectedRowBlueBrush" Color="#00B2FF" />

    <Style x:Key="Win7Button" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="grid">
                        <Border x:Name="border"
                                BorderBrush="#707070"
                                BorderThickness="1"
                                CornerRadius="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#F2F2F2" />
                                    <GradientStop Offset=".4" Color="#EBEBEB" />
                                    <GradientStop Offset=".5" Color="#DDDDDD" />
                                    <GradientStop Offset="1" Color="#CFCFCF" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3C7FB1" />
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#EAF6FD" />
                                        <GradientStop Offset=".4" Color="#D9F0FC" />
                                        <GradientStop Offset=".5" Color="#BEE6FD" />
                                        <GradientStop Offset="1" Color="#A7D9F5" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#2C628B" />
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#E5F4FC" />
                                        <GradientStop Offset=".4" Color="#C4E5F6" />
                                        <GradientStop Offset=".5" Color="#98D1EF" />
                                        <GradientStop Offset="1" Color="#68B3DB" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.25" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Win7ButtonWithImage"
           BasedOn="{StaticResource Win7Button}"
           TargetType="Button">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="0,0,10,0"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                        <Image Margin="0,0,5,0" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Tag}" />
                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Content}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BasicButtonStyle"
           BasedOn="{StaticResource Win7Button}"
           TargetType="Button">
        <Setter Property="MinWidth" Value="63" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>

    <Style x:Key="BasicTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="MaxLength" Value="64" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true">

                        <Border Width="20"
                                Height="20"
                                Margin="-25,0,0,0"
                                Background="OrangeRed"
                                CornerRadius="5"
                                DockPanel.Dock="right"
                                ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">

                            <TextBlock HorizontalAlignment="center"
                                       VerticalAlignment="center"
                                       FontWeight="Bold"
                                       Foreground="white"
                                       Text="!" />

                        </Border>

                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
                            <Border BorderBrush="red" BorderThickness="1" />
                        </AdornedElementPlaceholder>

                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ControlTextBox"
           BasedOn="{StaticResource BasicTextBoxStyle}"
           TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="AddressControlTextBox"
           BasedOn="{StaticResource ControlTextBox}"
           TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Height" Value="80" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    </Style>

    <Style x:Key="BasicComboBoxStyle" TargetType="ComboBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    </Style>

    <Style x:Key="ControlComboBox"
           BasedOn="{StaticResource BasicComboBoxStyle}"
           TargetType="ComboBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="ExControlComboBox"
           BasedOn="{StaticResource ControlComboBox}"
           TargetType="ComboBox">
        <Setter Property="DisplayMemberPath" Value="Name" />
        <Setter Property="SelectedValuePath" Value="Value" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="LabelTextBlock" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,10" />
    </Style>

    <Style x:Key="TitleTextBlock" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="2,5" />
    </Style>

    <Style x:Key="DescriptionTextBlock" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="FontSize" Value="{StaticResource Text.Size}" />
    </Style>

    <Style x:Key="TextBoxSmallScreenStyle"
           BasedOn="{StaticResource BasicTextBoxStyle}"
           TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Margin" Value="0,0,10,0" />
    </Style>

    <Style x:Key="ButtonStyleSmallScreen"
           BasedOn="{StaticResource BasicButtonStyle}"
           TargetType="Button">
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="MaxWidth" Value="83" />
        <Setter Property="MaxHeight" Value="25" />
    </Style>

    <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <StackPanel Orientation="Horizontal">
                <Image RenderOptions.BitmapScalingMode="HighQuality" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Tag}" />
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Focusable="False"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#F2F2F2" />
                <Setter TargetName="border" Property="BorderBrush" Value="#D6D6D6" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#F2F2F2" />
                <Setter TargetName="border" Property="BorderBrush" Value="#F2F2F2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ImageButtonStyle"
           BasedOn="{StaticResource BasicButtonStyle}"
           TargetType="Button">
        <Setter Property="Template" Value="{DynamicResource ButtonControlTemplate1}" />
        <Setter Property="BorderBrush" Value="#00FFFFFF" />
        <Setter Property="MaxHeight" Value="35" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BackgroundColor}" />
    </Style>

    <Style x:Key="ControlImageButton"
           BasedOn="{StaticResource ImageButtonStyle}"
           TargetType="Button">
        <Setter Property="Width" Value="35" />
        <Setter Property="MaxWidth" Value="35" />
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>

    <Style x:Key="ControlEditButton"
           BasedOn="{StaticResource ControlImageButton}"
           TargetType="Button">
        <Setter Property="Tag" Value="../../Images/edit.png" />
    </Style>

    <ControlTemplate x:Key="BlueButtonControlTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <StackPanel Orientation="Horizontal">
                <Image RenderOptions.BitmapScalingMode="HighQuality" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Tag}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BasicImageButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3"
                SnapsToDevicePixels="True">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Tag}" />
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Focusable="False"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </StackPanel>
        </Border>
    </ControlTemplate>

    <Style x:Key="BasicImageButtonStyle"
           BasedOn="{StaticResource Win7Button}"
           TargetType="Button">
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="MaxWidth" Value="150" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="FormButtonWithImage"
           BasedOn="{StaticResource Win7ButtonWithImage}"
           TargetType="Button">
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="MaxWidth" Value="150" />
    </Style>

    <Style x:Key="BlueImageButtonStyle"
           BasedOn="{StaticResource ImageButtonStyle}"
           TargetType="Button">
        <Setter Property="Template" Value="{DynamicResource BlueButtonControlTemplate}" />
        <Setter Property="BorderBrush" Value="#00FFFFFF" />
        <Setter Property="MaxHeight" Value="35" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="MaxWidth" Value="35" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=BackgroundColor}" />
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Thickness x:Key="Tab_Border_Thickness">1,1,1,1</Thickness>
    <CornerRadius x:Key="TabConrol_Corner_Radius">0,4,4,4</CornerRadius>

    <Style x:Key="OperationTabControlStyle" TargetType="TabControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid UseLayoutRounding="True">
                        <Grid.RowDefinitions>
                            <!--  3 rows for the TabPanel, overlap, and the selected content  -->
                            <RowDefinition Height="24" />
                            <RowDefinition Height="1" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  TabPanel needs to be on top of the selected content border  -->
                        <TabPanel Grid.Row="0"
                                  Grid.RowSpan="2"
                                  Panel.ZIndex="1"
                                  IsItemsHost="True" />
                        
                        <Border Grid.Row="1"
                                Grid.RowSpan="2"
                                Panel.ZIndex="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{StaticResource Tab_Border_Thickness}"
                                CornerRadius="{StaticResource TabConrol_Corner_Radius}">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="{DynamicResource TabGradientStartColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource TabGradientEndColor}" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Color="#e7e7e7" />
                            </Border.Effect>
                            <ContentPresenter ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Gainsboro" />
        <Setter Property="Margin" Value="20,20,32.333,22.333" />
    </Style>
    <Style x:Key="OperationTabItemStyle" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="Root">
                        <Border Name="Border"
                                Margin="1,1"
                                BorderBrush="#00618b"
                                BorderThickness="1,1,1,0"
                                CornerRadius="4,4,0,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.2" Color="{DynamicResource ControlLightColor}" />
                                            <GradientStop Offset="0.6" Color="{DynamicResource TabItemMediumColor}" />
                                            <GradientStop Offset="1.2" Color="{DynamicResource ControlLightColor}" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="ContentSite"
                                              Margin="8,2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                                                         (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource TabItemPressedLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                                                         (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource TabItemPressedMediumColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Margin" Value="0,-1,0,0" />
                            <Setter TargetName="ContentSite" Property="Margin" Value="8,3,8,3" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GradientRectangle" TargetType="Rectangle">
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="{DynamicResource MainPanelStartColor}" />
                    <GradientStop Offset="1.0" Color="{DynamicResource MainPanelEndColor}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>